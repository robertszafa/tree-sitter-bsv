====================
naked cond expr stmt
====================

module mkTest (Empty);
  int x = 1;
  int y = 2;
  x == y ? ((y > 2) ? mkSub1 : mkSub2) : mkSub2;
endmodule

module mkSub1 (Empty);
endmodule

module mkSub2 (Empty);
endmodule

---


(sourceFile
  (packageStmt
    (moduleDef
      (moduleProto
        (identifier)
        (moduleFormalArgs
          (type
            (typePrimary
              (typeIde
      (identifier))))))
      (moduleStmt
        (varDecl
          (type
            (typePrimary
              (typeIde
          (identifier))))
          (varInit
            (identifier)
            (expression
              (exprPrimary
                (intLiteral
                  (unsizedIntLiteral
                    (decNum
      (decDigits)))))))))
      (moduleStmt
        (varDecl
          (type
            (typePrimary
              (typeIde
          (identifier))))
          (varInit
            (identifier)
            (expression
              (exprPrimary
                (intLiteral
                  (unsizedIntLiteral
                    (decNum
      (decDigits)))))))))
      (moduleStmt
        (condExpr
          (condPredicate
            (exprOrCondPattern
              (expression
                (operatorExpr
                  (expression
                    (exprPrimary
                  (identifier)))
                  (binop)
                  (expression
                    (exprPrimary
          (identifier)))))))
          (expression
            (exprPrimary
              (expression
                (condExpr
                  (condPredicate
                    (exprOrCondPattern
                      (expression
                        (exprPrimary
                          (expression
                            (operatorExpr
                              (expression
                                (exprPrimary
                              (identifier)))
                              (binop)
                              (expression
                                (exprPrimary
                                  (intLiteral
                                    (unsizedIntLiteral
                                      (decNum
                  (decDigits))))))))))))
                  (expression
                    (exprPrimary
                  (identifier)))
                  (expression
                    (exprPrimary
          (identifier)))))))
          (expression
            (exprPrimary
  (identifier)))))))
  (packageStmt
    (moduleDef
      (moduleProto
        (identifier)
        (moduleFormalArgs
          (type
            (typePrimary
              (typeIde
  (identifier))))))))
  (packageStmt
    (moduleDef
      (moduleProto
        (identifier)
        (moduleFormalArgs
          (type
            (typePrimary
              (typeIde
(identifier)))))))))
